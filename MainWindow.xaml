<Window x:Class="Recycle.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:Recycle.ViewModels"
        xmlns:view="clr-namespace:Recycle.Views"
        xmlns:ctrl="clr-namespace:Recycle.UserControls"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:cov="clr-namespace:Recycle.Converters"
        x:Name="mainWindow"
        mc:Ignorable="d"
        DataContext="{StaticResource mainViewModel}"
        Title="Recycle"
        FontFamily="{StaticResource Roboto}"
        WindowState="Maximized"
        MinHeight="600"
        MinWidth="800"
        Height="1024"
        Width="1280"
        SizeChanged="Window_SizeChanged"
        Loaded="Window_Loaded" 
        Icon="Images/Desk Logo.ico">
    <Window.Resources>
        <cov:CountConverter x:Key="covCountInverse" Inverse="True" />
        <Storyboard x:Key="storyShowPopup">
            <DoubleAnimation To="1"
                             Duration="00:00:00.2"
                             Storyboard.TargetProperty="Opacity"/>
        </Storyboard>
        <Storyboard x:Key="storyHidePopup" Completed="Storyboard_Completed">
            <DoubleAnimation To="0"
                             Duration="00:00:00.2"
                             Storyboard.TargetProperty="Opacity"/>
        </Storyboard>
        <Style x:Key="styleStatusText" TargetType="TextBlock">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <DataTemplate x:Key="tempStatus">
            <Button x:Name="button"
                    Style="{StaticResource styleRoundButton}"
                    Margin="8,0"
                    Background="{StaticResource brushLightGreen}"
                    Click="RobotStatus_Click">
                <TextBlock Style="{StaticResource styleStatusText}" Text="{Binding}"/>
            </Button>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Status}" Value="ERROR">
                    <Setter TargetName="button" Property="Background" Value="{StaticResource brushError}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Status}" Value="WARNING">
                    <Setter TargetName="button" Property="Background" Value="{StaticResource brushWarning}"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </Window.Resources>
    <Grid Background="{StaticResource brushGray}">
        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <!-- Header -->
        <DockPanel Panel.ZIndex="3"
                   Background="{StaticResource brushPrimary}"
                   LastChildFill="False">
            <DockPanel.Resources>
                <Style TargetType="Line">
                    <Setter Property="Width" Value="1"/>
                    <Setter Property="Y1" Value="0"/>
                    <Setter Property="Y2" Value="1"/>
                    <Setter Property="Stroke" Value="White" />
                    <Setter Property="Opacity" Value="0.5"/>
                    <Setter Property="Stretch" Value="Fill"/>
                </Style>
                <Style TargetType="Button" BasedOn="{StaticResource styleHeaderButton}">
                    <Setter Property="Width" Value="144"/>
                </Style>
            </DockPanel.Resources>
            <!-- Privileage -->
            <Button x:Name="btnAccount"
                    DockPanel.Dock="Right"
                    ContextMenuService.IsEnabled="False"
                    Click="OpenContextMenu">
                <Button.ContextMenu>
                    <ContextMenu Placement="Bottom"
                                 HorizontalOffset="-28"
                                 VerticalOffset="-27">
                        <MenuItem Header="{DynamicResource strComOperator}" 
                                  Click="ChangeToOperator"
                                  IsChecked="{Binding IsAdmin, Mode=OneWay, Converter={StaticResource covInverse}}"/>
                        <MenuItem Header="{DynamicResource strComAdministrator}"
                                  Click="ChangeToAdministrator"
                                  IsChecked="{Binding IsAdmin, Mode=OneWay}"/>
                    </ContextMenu>
                </Button.ContextMenu>
                <StackPanel Orientation="Horizontal">
                    <Path Data="{StaticResource geoAccount}" Fill="White"/>
                    <Path Data="{StaticResource geoTriangle}" Fill="White" VerticalAlignment="Center" Margin="30,0,0,0"/>
                </StackPanel>
            </Button>
            <Line DockPanel.Dock="Right"/>
            <!-- Language -->
            <Button DockPanel.Dock="Right" 
                    ContextMenuService.IsEnabled="False"
                    Click="OpenContextMenu">
                <Button.ContextMenu>
                    <ContextMenu Placement="Bottom"
                                 HorizontalOffset="-28"
                                 VerticalOffset="-27">
                        <MenuItem Header="繁體中文"
                                  Tag="zh-TW"
                                  IsChecked="{Binding CurrentLanguage, Source={StaticResource mainViewModel}, Converter={StaticResource covStringValue}, ConverterParameter=zh-TW, Mode=OneWay}"
                                  Click="Language_Click"/>
                        <MenuItem Header="English"
                                  Tag="en-US"
                                  IsChecked="{Binding CurrentLanguage, Source={StaticResource mainViewModel}, Converter={StaticResource covStringValue}, ConverterParameter=en-US, Mode=OneWay}"
                                  Click="Language_Click"/>
                    </ContextMenu>
                </Button.ContextMenu>
                <StackPanel Orientation="Horizontal">
                    <Path Data="{StaticResource geoLanguage}" Fill="White"/>
                    <Path Data="{StaticResource geoTriangle}" Fill="White" VerticalAlignment="Center" Margin="30,0,0,0"/>
                </StackPanel>
            </Button>
            <Line DockPanel.Dock="Right"/>
            <Button x:Name="btnFullScreen" DockPanel.Dock="Right" Click="btnFullScreen_Click">
                <Path x:Name="iconFullScreen" Data="{StaticResource geoFullscreen}" Fill="White"/>
            </Button>
            <Line DockPanel.Dock="Right"/>
        </DockPanel>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="columnNavi" Width="200" />
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <!-- Tabs -->
            <Rectangle Grid.RowSpan="2"
                       Panel.ZIndex="2" 
                       Fill="{StaticResource brushWhite}">
                <Rectangle.Effect>
                    <DropShadowEffect ShadowDepth="4" BlurRadius="5" Color="Black" Opacity="0.2" Direction="0" />
                </Rectangle.Effect>
            </Rectangle>
            <StackPanel Grid.RowSpan="2"
                        Panel.ZIndex="2"
                        Background="{StaticResource brushWhite}">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type ctrl:NavigationButton}" BasedOn="{StaticResource {x:Type ctrl:NavigationButton}}" >
                        <Setter Property="IconOnly" Value="{DynamicResource boolIconOnly}"/>
                        <EventSetter Event="Checked" Handler="NaviButton_Checked"/>
                    </Style>
                </StackPanel.Resources>
                <Label x:Name="labRealTimeStatus"
                   Height="40"
                   FontSize="16"
                   Content="{DynamicResource strNaviRealTimeStatus}"
                   HorizontalContentAlignment="Center"
                   VerticalContentAlignment="Center"/>
                <ctrl:NavigationButton x:Name="btnHome" Content="{DynamicResource strNaviHome}" PathData="{StaticResource geoHome}" IsChecked="True" Tag="HOME"/>
                <ctrl:NavigationButton Content="{DynamicResource strNaviTasks}" PathData="{StaticResource geoSink}" Tag="TASK"/>
                <ctrl:NavigationButton Content="{DynamicResource strNaviStatus}" PathData="{StaticResource geoStatus}" Tag="STATUS"/>
                <ctrl:NavigationButton Content="{DynamicResource strNaviAdjust}" PathData="{StaticResource geoAdjust}" Tag="ADJUST"/>
                <ctrl:NavigationButton Content="{DynamicResource strNaviLog}" PathData="{StaticResource geoLog}" Tag="LOG"/>
            </StackPanel>
            <!-- Status -->
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="88"/>
                </Grid.RowDefinitions>
                <Border Visibility="{Binding ElementName=itemsStatus, Path=Items.Count, Converter={StaticResource covCountInverse}}"
                        CornerRadius="12"
                        Margin="8,4"
                        Background="{StaticResource brushLightGreen}">
                    <TextBlock Style="{StaticResource styleStatusText}" Text="{DynamicResource strComAllGood}"/>
                </Border>
                <ItemsControl x:Name="itemsStatus"
                              ItemsSource="{Binding RobotsStatus}"
                              Margin="0,4"
                              ItemTemplate="{StaticResource tempStatus}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Rows="1"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
                <Border Grid.Row="1" Padding="40,0,0,0" DataContext="{Binding CurrentContent}">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Path Data="{Binding PathData}" Fill="Black" Stretch="Uniform" Height="40" Width="40"/>
                        <TextBlock VerticalAlignment="Center"
                                   Margin="24,0,0,0"
                                   FontSize="40"
                                   FontWeight="Bold"
                                   MinWidth="120"
                                   Text="{Binding Name, Mode=OneWay}"/>
                        <TextBlock VerticalAlignment="Bottom"
                                   Margin="24,0,0,0"
                                   FontSize="16"
                                   Text="{Binding Description, Mode=OneWay}"/>
                    </StackPanel>
                </Border>
            </Grid>
            <!-- Content -->
            <ContentControl Content="{Binding CurrentContent}"
                            Grid.Column="1"
                            Grid.Row="1">
                <ContentControl.Resources>
                    <DataTemplate DataType="{x:Type vm:HomePageViewModel}">
                        <view:HomePage/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type vm:TaskPageViewModel}">
                        <view:TaskPage/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type vm:StatusPageViewModel}">
                        <view:StatusPage/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type vm:AdjustPageViewModel}">
                        <view:AdjustPage/>
                    </DataTemplate>
                    <DataTemplate DataType="{x:Type vm:LogPageViewModel}">
                        <view:LogPage/>
                    </DataTemplate>
                </ContentControl.Resources>
            </ContentControl>
        </Grid>
        <ContentControl x:Name="popup"
                        Grid.Row="1"
                        IsHitTestVisible="False"
                        Panel.ZIndex="10"
                        Opacity="0">
            <ContentControl.Template>
                <ControlTemplate TargetType="ContentControl">
                    <Grid>
                        <Border x:Name="popup"
                                Background="#80000000"
                                BorderThickness="0"
                                Padding="0,0,0,40">
                            <Border.InputBindings>
                                <MouseBinding MouseAction="LeftClick"
                                              Command="{Binding ElementName=mainWindow}"
                                              CommandParameter="hidepopup"/>
                            </Border.InputBindings>
                        </Border>
                        <ContentPresenter VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </ContentControl.Template>
        </ContentControl>
    </Grid>
</Window>
