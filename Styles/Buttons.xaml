<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrl="clr-namespace:Recycle.UserControls">
    <!-- Button -->
    <Style x:Key="styleHeaderButton" TargetType="ButtonBase">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{DynamicResource brushPrimary}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="enter">
                            <DoubleAnimation From="0"
                                             To="0.2"
                                             Duration="00:00:00.2"
                                             AutoReverse="True"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="{TemplateBinding Background}">
                        <Rectangle x:Name="hover"
                                   IsHitTestVisible="False"
                                   Fill="Black"
                                   Opacity="0"
                                   StrokeThickness="0"/>
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="TouchDown">
                            <BeginStoryboard Storyboard="{StaticResource enter}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="styleRoundButton" TargetType="ButtonBase">
        <Setter Property="ctrl:ButtonHelper.CornerRadius" Value="12"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource brushPrimary}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="enter">
                            <DoubleAnimation From="0"
                                             To="0.2"
                                             Duration="00:00:00.2"
                                             AutoReverse="True"
                                             Storyboard.TargetName="hover"
                                             Storyboard.TargetProperty="Opacity"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border CornerRadius="{TemplateBinding ctrl:ButtonHelper.CornerRadius}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"/>
                        <Border x:Name="hover"
                                CornerRadius="{TemplateBinding ctrl:ButtonHelper.CornerRadius}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                IsHitTestVisible="False"
                                Visibility="Visible"
                                Background="Black"
                                Opacity="0"/>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="TouchDown">
                            <BeginStoryboard Storyboard="{StaticResource enter}"/>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="styleMainButton" TargetType="ButtonBase" BasedOn="{StaticResource styleRoundButton}">
        <Setter Property="ctrl:ButtonHelper.CornerRadius" Value="15"/>
        <Setter Property="Background" Value="{DynamicResource brushLightGreen}"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>
    <Style x:Key="styleSettingButton" TargetType="Button" BasedOn="{StaticResource styleMainButton}">
        <Setter Property="Background" Value="{DynamicResource brushLightGreen}"/>
        <Setter Property="Width" Value="104"/>
    </Style>
    <Style x:Key="styleWhiteButton" TargetType="ButtonBase" BasedOn="{StaticResource styleMainButton}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#999999"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource brushBlack}"/>
        <Setter Property="MinWidth" Value="104"/>
    </Style>
    <Style x:Key="styleIncreaseButton" TargetType="ButtonBase">
        <Setter Property="Background" Value="{DynamicResource brushTitle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Path Data="{DynamicResource geoIncrease}"
                          Fill="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#999999"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="styleDecreaseButton" TargetType="ButtonBase">
        <Setter Property="Background" Value="{DynamicResource brushTitle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ButtonBase">
                    <Path Data="{DynamicResource geoDecrease}"
                          Fill="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#999999"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Radio Button -->
    <Style x:Key="styleTabBase" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource brushIndicator}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="FontWeight" Value="Bold"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="styleRdbTab" TargetType="ToggleButton" BasedOn="{StaticResource styleTabBase}">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="hover"
                                   RadiusX="4"
                                   RadiusY="4"
                                   IsHitTestVisible="False"
                                   Fill="Black"
                                   Opacity="0.1"
                                   Visibility="Hidden"/>
                        <ContentPresenter x:Name="content"
                                          Opacity="0.85"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Rectangle x:Name="mark"
                                   RadiusX="6"
                                   RadiusY="6"
                                   Grid.Row="1"
                                   IsHitTestVisible="False"
                                   Fill="{TemplateBinding BorderBrush}"
                                   Visibility="Hidden"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="mark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="content" Property="Opacity" Value="1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="hover" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="styleRoundRadioButton" TargetType="ToggleButton" BasedOn="{StaticResource styleRoundButton}">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="20" Direction="0" ShadowDepth="6" Color="Black" Opacity="0.1"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="#F7C26C"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- Check Box -->
    <Style TargetType="CheckBox">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource brushTitle}"/>
        <Setter Property="Foreground" Value="{DynamicResource brushBlack}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Canvas Width="24" Height="24" IsHitTestVisible="False">
                                <Path x:Name="checkMark"
                                      Data="{StaticResource geoUnchecked}"
                                      Fill="#979797"/>
                            </Canvas>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="16,0,0,0"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"
                                          RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="checkMark" Property="Data" Value="{StaticResource geoChecked}"/>
                            <Setter TargetName="checkMark" Property="Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="RadioButton">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource brushLightGreen}"/>
        <Setter Property="Foreground" Value="{DynamicResource brushBlack}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Canvas Width="24" Height="24" IsHitTestVisible="False">
                                <Rectangle x:Name="uncheck"
                                           RadiusX="8"
                                           RadiusY="8"
                                           Fill="#E4E4E4"
                                           Width="24"
                                           Height="24"
                                           StrokeThickness="0"
                                           Visibility="Hidden"/>
                                <Path x:Name="check"
                                      Data="{StaticResource geoRoundChecked}"
                                      Fill="{TemplateBinding Background}"
                                      Visibility="Hidden"/>
                            </Canvas>
                        </BulletDecorator.Bullet>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="check">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" >
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="uncheck">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Margin="16,0,0,0"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left"
                                          RecognizesAccessKey="True" />
                    </BulletDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Navigation Button -->
    <Style TargetType="{x:Type ctrl:NavigationButton}">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Height" Value="96"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource brushPrimary}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrl:NavigationButton}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="8"/>
                            <ColumnDefinition x:Name="column1" Width="85"/>
                            <ColumnDefinition x:Name="column2"/>
                        </Grid.ColumnDefinitions>
                        <Rectangle x:Name="mark"
                                   RadiusX="6"
                                   RadiusY="6"
                                   IsHitTestVisible="False"
                                   Fill="{DynamicResource brushIndicator}"
                                   Visibility="Hidden"/>
                        <Path x:Name="icon"
                              IsHitTestVisible="False"
                              Fill="{TemplateBinding Foreground}"
                              Data="{TemplateBinding PathData}"
                              Grid.Column="1"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"/>
                        <ContentPresenter Grid.Column="2"
                                          IsHitTestVisible="False"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="mark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IconOnly" Value="True">
                            <Setter TargetName="column1" Property="Width" Value="48"/>
                            <Setter TargetName="column2" Property="Width" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F2F2F2"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource brushIndicatorLight}"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="FontWeight" Value="Bold"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>